// datasource e generator
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =================================
//          MODELOS MAPEADOS
// =================================

model Categoria {
  id       Int       @id @default(autoincrement())
  nome     String    @unique @db.VarChar(100)
  produtos Produto[]

  @@map("categorias")
}

model Endereco {
  id            BigInt    @id @default(autoincrement())
  usuarioId     BigInt    @map("usuario_id")
  logradouro    String    @db.VarChar(255)
  numero        String?   @db.VarChar(20)
  complemento   String?
  bairro        String    @db.VarChar(100)
  cidade        String    @db.VarChar(100)
  estado        String    @db.VarChar(2)
  cep           String    @db.VarChar(9)
  referencia    String?
  tipoEndereco  String    @map("tipo_endereco")

  usuario Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  pedidos Pedido[]

  @@map("enderecos")
}

model ItemPedido {
  pedidoId            BigInt  @map("pedido_id")
  produtoId           BigInt  @map("produto_id")
  quantidade          Int
  precoUnitarioCompra Decimal @map("preco_unitario_compra") @db.Decimal(10, 2)

  pedido  Pedido  @relation(fields: [pedidoId], references: [id], onDelete: Cascade)
  produto Produto @relation(fields: [produtoId], references: [id], onDelete: Restrict)

  @@id([pedidoId, produtoId])
  @@map("itens_pedido")
}

model Pedido {
  id                BigInt    @id @default(autoincrement())
  consumidorId      BigInt    @map("consumidor_id")
  enderecoEntregaId BigInt    @map("endereco_entrega_id")
  valorProdutos     Decimal   @map("valor_produtos") @db.Decimal(10, 2)
  valorEntrega      Decimal?  @map("valor_entrega") @default(0.00) @db.Decimal(10, 2)
  valorComissao     Decimal?  @map("valor_comissao") @db.Decimal(10, 2)
  valorTotal        Decimal?  @map("valor_total") @db.Decimal(10, 2)
  statusPedido      String    @map("status_pedido") @default("processando") @db.VarChar(50)
  criadoEm          DateTime? @map("criado_em") @default(now()) @db.Timestamptz(6)
  atualizadoEm      DateTime? @map("atualizado_em") @updatedAt @db.Timestamptz(6)

  consumidor      Usuario  @relation("PedidosDoConsumidor", fields: [consumidorId], references: [id], onDelete: Restrict)
  enderecoEntrega Endereco @relation(fields: [enderecoEntregaId], references: [id], onDelete: Restrict)
  itens           ItemPedido[]

  @@index([consumidorId])
  @@index([statusPedido])
  @@map("pedidos")
}

model Produto {
  id            BigInt    @id @default(autoincrement())
  vendedorId    BigInt    @map("vendedor_id")
  nome          String    @db.VarChar(255)
  descricao     String?
  imagemUrl     String?   @map("imagem_url")
  preco         Decimal   @db.Decimal(10, 2)
  unidadeMedida String    @map("unidade_medida") @db.VarChar(20)
  estoque       Int?
  ativo         Boolean?  @default(true)
  criadoEm      DateTime? @map("criado_em") @default(now()) @db.Timestamptz(6)
  atualizadoEm  DateTime? @map("atualizado_em") @updatedAt @db.Timestamptz(6)

  // RELACIONAMENTO COM CATEGORIA ADICIONADO
  categoriaId   Int?      @map("categoria_id")
  categoria     Categoria? @relation(fields: [categoriaId], references: [id], onDelete: SetNull)

  vendedor    Usuario    @relation("ProdutosDoVendedor", fields: [vendedorId], references: [id], onDelete: Cascade)
  itensPedido ItemPedido[]

  @@index([vendedorId])
  @@map("produtos")
}

model Usuario {
  id               BigInt    @id @default(autoincrement())
  nomeCompleto     String    @map("nome_completo") @db.VarChar(255)
  email            String    @unique @db.VarChar(255)
  senhaHash        String    @map("senha_hash") @db.VarChar(255)
  cpfCnpj          String    @map("cpf_cnpj") @unique @db.VarChar(18)
  telefone         String?   @db.VarChar(20)
  tipoUsuario      String    @map("tipo_usuario") @db.VarChar(20)
  nomeNegocio      String?   @map("nome_negocio") @db.VarChar(255)
  descricaoNegocio String?   @map("descricao_negocio")
  logoUrl          String?   @map("logo_url")
  criadoEm         DateTime? @map("criado_em") @default(now()) @db.Timestamptz(6)
  atualizadoEm     DateTime? @map("atualizado_em") @updatedAt @db.Timestamptz(6)

  enderecos Endereco[]
  pedidos   Pedido[]  @relation("PedidosDoConsumidor")
  produtos  Produto[] @relation("ProdutosDoVendedor")

  @@index([email])
  @@map("usuarios")
}